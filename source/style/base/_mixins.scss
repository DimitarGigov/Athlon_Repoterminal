/**
 * Helper mixins
*/

// Clearfix
// http://www.cssmojo.com/latest_new_clearfix_so_far/
// Other clearfix options: https://github.com/stubbornella/oocss/blob/master/oocss/src/components/utils/_clearfix-me.scss
@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

// Media queries
//@mixin bp($point) {
  //@if $point == large {
   // @media (min-width: 1280px) { @content; }
  //} @else if $point == small {
 //   @media (max-width: 1279px) { @content; }
 // }
//}
/*------------------------------------*\
    breakpoint vars
\*------------------------------------*/
$break-320: 20em;
$break-321: 20.0625em;
$break-480: 30em;
$break-600: 37.5em;
$break-768: 48em;
$break-980: 61.25em;
$break-1024: 64em;
$break-1200: 75em;
$break-1224: 76.5em;
$break-1280: 80em;
$break-1366: 85.375em;
$break-1740: 108.750em;
$break-1824: 114em;

/*------------------------------------*\
    breakpoint mixin
\*------------------------------------*/
@mixin breakpoint($point) {
    @if $point == tablet {
        @media (max-width: $break-768) 
        and (min-width: $break-480)  { @content; }
    }

    @else if $point == desktop {
        @media (min-width: $break-1280) { @content; }
    }
    //=========================

    @else if $point == desktopmini {
      @media only screen
      and (max-width: $break-980) 
      and (min-width: $break-768) { @content; }
  }
    // Smartphones (portrait and landscape)
    @else if $point == mobile {
        @media only screen
        and (min-width: $break-320)
        and (max-width: $break-480)  { @content; }
    }

    // Smartphones (landscape)
    @else if $point == mobileLandscape {
        @media only screen
        and (min-width : $break-321) { @content; }
    }

    // Smartphones (portrait)
    @else if $point == mobilePortrait {
        @media only screen
        and (max-width : $break-320) { @content; }
    }

    // iPads (portrait and landscape)
    @else if $point == ipad {
        @media only screen
        and (min-device-width : $break-768)
        and (max-device-width : $break-1024) { @content; }
    }

    // iPads (landscape)
    @else if $point == ipadLandscape {
        @media only screen
        and (min-device-width : $break-768)
        and (max-device-width : $break-1024)
        and (orientation : landscape) { @content; }
    }

    // iPads (portrait)
    @else if $point == ipadPortrait {
        @media only screen
        and (min-device-width : $break-768)
        and (max-device-width : $break-1024)
        and (orientation : portrait) { @content; }
    }

    // Desktops and laptops
    @else if $point == desktopLaptop {
        @media only screen
        and (min-width : $break-980)
        and (max-width: $break-1280)  { @content; }
    }

    // Large screens
    @else if $point == desktopLarge {
        @media only screen
        and (min-width : $break-1280)
        and (max-width: $break-1740) { @content; }
    }

    // iPhone 4
    @else if $point == iphone4 {
        @media
        only screen and (-webkit-min-device-pixel-ratio : 1.5),
        only screen and (min-device-pixel-ratio : 1.5) { @content; }
    }
}

/*------------------------------------*\
    breakpoint usage
\*------------------------------------*/
header {
    height: 100px;
    @include breakpoint(tablet) { height: auto; }
}
// example @include bp(small){
  // width: 50%;

// Text selection
@mixin text-selection($color-selection, $color-selection-bg) {
  ::-moz-selection { // sass-lint:disable-line no-vendor-prefixes
    background: $color-selection-bg;
    color: $color-selection;
    text-shadow: none;
  }

  ::selection {
    background: $color-selection-bg;
    color: $color-selection;
    text-shadow: none;
  }
}

//Placeholders
//Usage:
//@include placeholder;
@mixin placeholder {
  // sass-lint:disable no-vendor-prefixes
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}
}




// -------------------------------------------
  // Arrows / Triangles
 // -------------------------------------------
 // example: @include arrow("left", #cccccc, 10);
@mixin arrow($direction, $color, $size) {
  $pxSize: $size + px;
  $remSize: ($size / 10) + rem;
  width: 0;
  height: 0;
  @if $direction == "left"{
    border-top: $pxSize solid transparent;
    border-right: $pxSize solid $color;
    border-bottom: $pxSize solid transparent;
    border-top: $remSize solid transparent;
    border-right: $remSize solid $color;
    border-bottom: $remSize solid transparent;
  }@else if $direction == "right"{
    border-top: $pxSize solid transparent;
    border-bottom: $pxSize solid transparent;
    border-left: $pxSize solid $color;
    border-top: $remSize solid transparent;
    border-bottom: $remSize solid transparent;
    border-left: $remSize solid $color;
  }@else if $direction == "up"{
    border-left: $pxSize solid transparent;
    border-right: $pxSize solid transparent;
    border-bottom: $pxSize solid $color;
    border-left: $remSize solid transparent;
    border-right: $remSize solid transparent;
    border-bottom: $remSize solid $color;
  }@else if $direction == "down"{
    border-left: $pxSize solid transparent;
    border-right: $pxSize solid transparent;
    border-top: $pxSize solid $color;
    border-left: $remSize solid transparent;
    border-right: $remSize solid transparent;
    border-top: $remSize solid $color;
  }
}